# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------


from .. import try_manual


# EXAMPLE: /BackupPolicies/put/CreateOrUpdate BackupPolicy
@try_manual
def step_backup_policy_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-policy create '
             '--name "{myBackupPolicy}" '
             '--datasource-types "OssDB" '
             '--resource-group "{rg_2}" '
             '--vault-name "PrivatePreviewVault"',
             checks=checks)


# EXAMPLE: /BackupPolicies/get/Get BackupPolicy
@try_manual
def step_backup_policy_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-policy show '
             '--name "{myBackupPolicy}" '
             '--resource-group "{rg_2}" '
             '--vault-name "PrivatePreviewVault"',
             checks=checks)


# EXAMPLE: /BackupPolicies/get/List BackupPolicy
@try_manual
def step_backup_policy_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-policy list '
             '--resource-group "{rg_2}" '
             '--vault-name "PrivatePreviewVault"',
             checks=checks)


# EXAMPLE: /BackupInstances/put/Create BackupInstance
@try_manual
def step_backup_instance_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-instance create '
             '--name "{myBackupInstance}" '
             '--data-source-info datasource-type="OssDB" object-type="Datasource" resource-id="/subscriptions/{subscrip'
             'tion_id}/resourceGroups/{rg_3}/providers/Microsoft.DBforPostgreSQL/servers/{rg_3}/databases/testdb" '
             'resource-location="" resource-name="testdb" resource-type="Microsoft.DBforPostgreSQL/servers/databases" '
             'resource-uri="" '
             '--data-source-set-info datasource-type="OssDB" object-type="DatasourceSet" '
             'resource-id="/subscriptions/{subscription_id}/resourceGroups/{rg_3}/providers/Microsoft.DBforPostgreSQL/s'
             'ervers/{rg_3}" resource-location="" resource-name="{rg_3}" resource-type="Microsoft.DBforPostgreSQL/serve'
             'rs" resource-uri="" '
             '--friendly-name "harshitbi2" '
             '--object-type "BackupInstance" '
             '--policy-id "/subscriptions/{subscription_id}/resourceGroups/{rg_2}/providers/Microsoft.DataProtection/Ba'
             'ckupvaults/{myBackupVault}/backupPolicies/{myBackupPolicy2}" '
             '--policy-parameters data-store-parameters-list={{"dataStoreType":"OperationalStore","objectType":"AzureOp'
             'erationalStoreParameters","resourceGroupId":"/subscriptions/f75d8d8b-6735-4697-82e1-1a7a3ff0d5d4/resource'
             'Groups/viveksipgtest"}} '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=[])
    test.cmd('az dataprotection backup-instance wait --created '
             '--name "{myBackupInstance}" '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)


# EXAMPLE: /BackupInstances/get/List BackupInstances in a Vault
@try_manual
def step_backup_instance_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-instance list '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)


# EXAMPLE: /BackupInstances/post/Trigger Adhoc Backup
@try_manual
def step_backup_instance_adhoc_backup(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-instance adhoc-backup '
             '--name "{myBackupInstance}" '
             '--rule-name "BackupWeekly" '
             '--retention-tag-override "yearly" '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)


# EXAMPLE: /BackupInstances/post/Trigger Rehydrate
@try_manual
def step_backup_instance_trigger_rehydrate(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-instance trigger-rehydrate '
             '--name "{myBackupInstance}" '
             '--recovery-point-id "hardcodedRP" '
             '--rehydration-priority "High" '
             '--rehydration-retention-duration "7D" '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)


# EXAMPLE: /BackupInstances/post/Trigger Restore
@try_manual
def step_backup_instance_azure(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-instance azure-backup-recovery-point-based-restore-request '
             'item-level-restore-target-info trigger-restore '
             '--name "{myBackupInstance}" '
             '--azurebackuprecoverypointbasedrestorerequest-recovery-point-id "hardcodedRP" '
             '--azurebackuprecoverypointbasedrestorerequest-source-data-store-type "VaultStore" '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)


# EXAMPLE: /BackupInstances/post/Trigger Restore As Files
@try_manual
def step_backup_instance_azure2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-instance azure-backup-recovery-point-based-restore-request '
             'item-level-restore-target-info trigger-restore '
             '--name "{myBackupInstance}" '
             '--azurebackuprecoverypointbasedrestorerequest-recovery-point-id "hardcodedRP" '
             '--azurebackuprecoverypointbasedrestorerequest-source-data-store-type "VaultStore" '
             '--resource-group "{rg_2}" '
             '--vault-name "PrivatePreviewVault1"',
             checks=checks)


# EXAMPLE: /BackupInstances/post/Trigger Restore With Rehydration
@try_manual
def step_backup_instance_azure3(test, checks=None):
    return step_backup_instance_azure(test, checks)


# EXAMPLE: /BackupPolicies/delete/Delete BackupPolicy
@try_manual
def step_backup_policy_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-policy delete -y '
             '--name "{myBackupPolicy}" '
             '--resource-group "{rg_2}" '
             '--vault-name "PrivatePreviewVault"',
             checks=checks)


# EXAMPLE: /BackupVaults/put/Create BackupVault
@try_manual
def step_backup_vault_create(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-vault create '
             '--type "None" '
             '--location "WestUS" '
             '--storage-settings type="LocallyRedundant" datastore-type="VaultStore" '
             '--tags key1="val1" '
             '--resource-group "{rg}" '
             '--vault-name "swaggerExample"',
             checks=checks)


# EXAMPLE: /BackupVaults/put/Create BackupVault With MSI
@try_manual
def step_backup_vault_create2(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-vault create '
             '--type "systemAssigned" '
             '--location "WestUS" '
             '--storage-settings type="LocallyRedundant" datastore-type="VaultStore" '
             '--tags key1="val1" '
             '--resource-group "{rg}" '
             '--vault-name "swaggerExample"',
             checks=checks)


# EXAMPLE: /BackupVaults/get/Get BackupVault
@try_manual
def step_backup_vault_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-vault show '
             '--resource-group "{rg}" '
             '--vault-name "swaggerExample"',
             checks=checks)


# EXAMPLE: /BackupVaults/get/Get BackupVault With MSI
@try_manual
def step_backup_vault_show2(test, checks=None):
    return step_backup_vault_show(test, checks)


# EXAMPLE: /BackupVaults/get/Get BackupVaults in ResourceGroup
@try_manual
def step_backup_vault_show_resource_in_resource_group(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-vault show-resource-in-resource-group '
             '--resource-group "{rg}"',
             checks=checks)


# EXAMPLE: /BackupVaults/get/Get BackupVaults in Subscription
@try_manual
def step_backup_vault_show_resource_in_subscription(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-vault show-resource-in-subscription',
             checks=checks)


# EXAMPLE: /BackupVaults/patch/Patch BackupVault
@try_manual
def step_backup_vault_patch(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-vault patch '
             '--tags newKey="newVal" '
             '--resource-group "{rg}" '
             '--vault-name "swaggerExample"',
             checks=checks)


# EXAMPLE: /BackupInstances/get/Get BackupInstance
@try_manual
def step_backup_instance_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-instance show '
             '--name "{myBackupInstance}" '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)


# EXAMPLE: /BackupInstances/delete/Delete BackupInstance
@try_manual
def step_backup_instance_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-instance delete -y '
             '--name "{myBackupInstance}" '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)


# EXAMPLE: /BackupVaults/delete/Delete BackupVault
@try_manual
def step_backup_vault_delete(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection backup-vault delete -y '
             '--resource-group "{rg}" '
             '--vault-name "swaggerExample"',
             checks=checks)


# EXAMPLE: /dataprotection/get/Get OperationStatus
@try_manual
def step_show_operation_status(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection show-operation-status '
             '--operation-id "MjkxOTMyODMtYTE3My00YzJjLTg5NjctN2E4MDIxNDA3NjA2OzdjNGE2ZWRjLWJjMmItNDRkYi1hYzMzLWY1YzEwN'
             'zk5Y2EyOA==" '
             '--location "WestUS"',
             checks=checks)


# EXAMPLE: /dataprotection/get/GetOperationResult Patch
@try_manual
def step_show_operation_result_patch(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection show-operation-result-patch '
             '--operation-id "YWUzNDFkMzQtZmM5OS00MmUyLWEzNDMtZGJkMDIxZjlmZjgzOzdmYzBiMzhmLTc2NmItNDM5NS05OWQ1LTVmOGEzN'
             'zg4MWQzNA==" '
             '--resource-group "{rg}" '
             '--vault-name "swaggerExample"',
             checks=checks)


# EXAMPLE: /dataprotection/post/Check Azure Vm Backup Feature Support
@try_manual
def step_check_feature_support(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection check-feature-support '
             '--location "WestUS" '
             '--feature-validation-request feature-type="DataSourceType"',
             checks=checks)


# EXAMPLE: /Job/get/Get Job
@try_manual
def step_job_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection job show '
             '--job-id "3c60cb49-63e8-4b21-b9bd-26277b3fdfae" '
             '--resource-group "{rg_4}" '
             '--vault-name "BugBashVaultForCCYv11"',
             checks=checks)


# EXAMPLE: /Jobs/get/Get Jobs
@try_manual
def step_job_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection job list '
             '--resource-group "{rg_4}" '
             '--vault-name "BugBashVaultForCCYv11"',
             checks=checks)


# EXAMPLE: /RecoveryPoint/get/Get Recovery Point
@try_manual
def step_recovery_point_show(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection recovery-point show '
             '--backup-instance-name "{myBackupInstance}" '
             '--recovery-point-id "7fb2cddd-c5b3-44f6-a0d9-db3c4f9d5f25" '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)


# EXAMPLE: /RecoveryPoints/get/List Recovery Points in a Vault
@try_manual
def step_recovery_point_show_list(test, checks=None):
    if checks is None:
        checks = []
    test.cmd('az dataprotection recovery-point show-list '
             '--backup-instance-name "{myBackupInstance}" '
             '--resource-group "{rg_2}" '
             '--vault-name "{myBackupVault}"',
             checks=checks)
